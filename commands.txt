// DJANGO set up
pip install django
django-admin startproject todo
/ rename todo src
in  src:
- django-admin createapp tasks
- django-admin createapp authentification
add the 2 apps in settings



// PostgreSql set up
pip install psycopg2
Create the server in PostgreSQL
Create a user from postgresql:
- CREATE USER admin WITH ENCRYPTED PASSWORD 'admin';
- \du to view users
- ALTER ROLE admin SET client_encoding TO 'utf8';
- ALTER ROLE admin SET default_transaction_isolation TO 'read committed';

Create database:
- CREATE DATABASE TODO;

Give permissions to admin:
- GRANT ALL PRIVILEGES ON DATABASE TODO TO admin;

Settings:

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'todo',
        'USER': 'admin',
        'PASSWORD': 'admin',
        'HOST': 'localhost',
        'PORT': '5430'
    }
}

python manage.py makemigrations
python manage.py runserver to check to everything is OK
python manage.py createsuperuser

pip install python-dotenv
Host secret django key in .env.

Google authentication
- pip install django-allauth

GMail used: todo.xcoulon@gmail.com
Password: todo.xcoulon.password

Django rules:
- pip install rules

Pytest-django:
- pip install pytest-django
- python -m pytest

Pytest Factory Boy:
- pip install pytest-factoryboy

Faker:
- pip install Faker

Coverage:
- pip install coverage
- coverage html

Github / Gitlab:
- git push gitlab (or origin) / (cause gitlab has been added to remote url /!\
    - git remote set-url origin https://github.com/XavierCoulon/ToDo.git
    - git remote set-url origin https://gitlab.com/XavierCoulon/ToDo.git

Pycharm: automatic indentztion Opt + Command + L

Translation:
- python manage.py makemessages --all
- python manage.py compilemessages


DOCKER

docker run -p 8000:8000 -e POSTGRES_USER=admin -e POSTGRES_DB=todo -e POSTGRES_PASSWORD=admin -e POSTGRES_HOST=192.168.1.53 -e POSTGRES_PORT=5430 toto
docker build -t toto .

GÃ©rer le .dockerignore

Heroku:
- pip install gunicorn (web server)
- pip install django-heroku (+ add in settings)
- heroku run python src/manage.py migrate (run migrate)
- heroku run python src/manage.py createsuperuser
- git push heroku (once set up as remote branch)

Production:
- 192.168.1.53








